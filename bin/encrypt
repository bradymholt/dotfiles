#!/usr/bin/env node

// Encrypts a file asymmetrically, given a GitHub username (to obtain a public key)
// Usage:
//   encrypt bradymholt ./foo.txt

require('jbash')
set("-e")

const inFile = $2;
const outFile = `${$2}.encrypted`;
const pemFile = `/tmp/ghkey.pem`;
echo(`Downloading public key for ${$1} from GitHub`)
exec(`wget -q -O /tmp/ghkey.pub https://github.com/${$1}.keys`)
echo(`Converting key to PEM format`)
exec(`ssh-keygen -f /tmp/ghkey.pub -e -m PKCS8 > ${pemFile}`)
echo(`Encrypting ${inFile}`)
exec(`openssl rsautl -encrypt -pubin -inkey ${pemFile} -in ${inFile} -out ${outFile}`)
echo(`Encrypted file saved as: ${outFile}`)
echo(`This file can only be decrypted with private key owned by ${$1} using this command:
  openssl rsautl -decrypt -inkey ~/.ssh/id_rsa -in ${outFile} -out ${outFile.replace(/encrypted$/, "")}
`)
