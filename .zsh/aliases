# git / GitHub
alias gco='git checkout'
alias gcb='git checkout -b'
alias gp='git push -u'
alias gl='git pull'
alias gf='git fetch --prune --no-tags'
alias glg='git log'
alias gs='git status'
alias grh='git reset --hard HEAD'
alias gmod='git merge origin/develop'
alias gmom='git merge origin/master'
alias gd='git diff'
alias gdt='git difftool -y'
alias gmt='git mergetool'
# List branches with much better output format
alias gb="git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) (%(color:green)%(committerdate:relative)%(color:reset))'"
# Delete local tags that do not exist in remote
alias gtagpune='git fetch --prune origin "+refs/tags/*:refs/tags/*"'
# Stash
alias gst='git stash --include-untracked'
# Checkout specific file(s) from the latest stash
alias gstcf='git checkout stash@{0} --'
alias gstl='git stash list --stat'
alias gstd='git stash list -p'
alias gstp='git stash pop'
# The following git aliases point to scripts in {dotfiles}/home/bin
alias gac='git-add-commit'
alias gacp='git-add-commit-push'
alias gbc='git-branch-compare'
alias gbpurge='git-branch-purge'
alias gc='git-github-compare'
alias gpr='git-github-open-pr'
alias gmove='git-move-commits-new-branch'
alias gwtf='git-wtf'
alias ghd='github' # Opens GitHub Desktop for current repo

gh-api() {
  set -x    
  # Examples: gh-api bradymholt/myrepo/statuses
  #           gh-api bradymholt/myrepo/statuses/ed94da '{"state":"success","description":"Tests","context":"Tests"}'

  curl -H "Authorization: token $GITHUB_API_TOKEN" -H "Content-Type: application/json" ${@:2} https://api.github.com/repos/$1  
}

# npm
alias ni='npm install'
alias ns='npm run start'
alias nb='npm run build'
alias nt='npm test'
alias nu='ncu'

# yarn
alias yi='yarn install'

# Docker
alias d='docker'
alias dc='docker ps -a'
alias drm='docker rm $(docker ps -a -q) && docker rm $(docker ps -a -q)' # Delete all containers
alias drmi='docker rmi $(docker images -q)' # Deletes all images
alias dr='docker run --rm -it'

# Heroku
alias h='heroku'

# Other
alias cdh='cd $HOME'
alias l='ls -lAh'
alias r='send-reminder-email'
alias cls='printf "\033c"'                                                                  # clear screen
alias hg='history | grep'                                                                   # grep history
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to clipboard.'"  # pipe my public key to my clipboard.
alias psql2md=" sed 's/+/|/g' | sed 's/^/|/' | sed 's/$/|/' |  grep -v rows | grep -v '||'" # pg results to markdown table
alias uuid="uuidgen | tr -d '\n' | tr '[:upper:]' '[:lower:]' | pbcopy | echo '=> New UUID copied to clipboard.'"        # generate UUID and send to clipboard
alias dus='du -d 1 -h | sort -h'                                                            # file/directory size
alias blog='cd ~/dev/geekytidbits.com && ./newpost.sh'                                      # create new blog post
alias json=" jq -C '.' | less -R"                                                           # format piped JSON                                                           
alias fixdisplay='displayplacer "id:15C48A1D-FCF9-CEC0-72A1-F00465DB28FA res:1920x1200 color_depth:4 scaling:on origin:(0,0) degree:0" "id:2B06791D-98D8-0CF5-A627-06393098A398 res:2560x1440 hz:60 color_depth:8 scaling:off origin:(-483,-1440) degree:0" "id:88733A9D-FD53-D657-26C2-44A5AE004DEC res:1440x2560 hz:60 color_depth:8 scaling:off origin:(2077,-1898) degree:90"'

compress-video() {
  set -x
  ffmpeg -i $1 -c:v libx264 -crf 23 ${1}_compressed.mp4
}
compress-audio() {
  # lame settings for podcast quality output
  set -x
  lame -V6 --vbr-new --resample 22 -m m $1
}